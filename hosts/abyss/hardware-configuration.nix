# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, inputs, modulesPath, ... }:

{
  imports =
    [ 
      inputs.nixos-hardware.nixosModules.framework-amd-ai-300-series
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "thunderbolt" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/f0655bb1-ac12-46cf-a365-225db0215e7c";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-8ebb149e-1a38-483e-97df-1afcf80bc26e".device = "/dev/disk/by-uuid/8ebb149e-1a38-483e-97df-1afcf80bc26e";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/EB5D-700D";
      fsType = "vfat";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp195s0f0u2.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  # Updating firmware using https://github.com/NixOS/nixos-hardware/
  services.fwupd.enable = true;
}
